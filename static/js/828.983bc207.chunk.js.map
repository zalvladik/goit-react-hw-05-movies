{"version":3,"file":"static/js/828.983bc207.chunk.js","mappings":"wNAsFA,UAjFsB,WAAM,IAAD,UACvB,GAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAGDE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAKzCC,EAAAA,EAAAA,YAAU,WACFC,MAAM,GAAD,OAJQ,6BAIR,oBAAwBP,EAAxB,oBAHO,mCAGP,oBACJQ,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAX,IACXF,MAAK,SAAAG,GAAK,OAAIZ,GAAa,SAAAa,GAAS,OAAID,CAAJ,GAA1B,IACVE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACZC,QAAQC,IAAI,gBACnB,GAAC,CAAChB,IAEH,IAWgBiB,EAMhB,OAEI,iBAAKC,UAAU,kBAAf,WACI,gBAAKA,UAAU,qBAAf,UACI,SAAC,KAAD,CAASA,UAAU,WAAWC,GAAIjB,EAAlC,0BAEJ,iBAAKgB,UAAU,uBAAf,WACI,gBAAKA,UAAU,mBAAf,SACKpB,EAAUsB,aACP,gBAAKF,UAAU,SAASG,IAAG,UAAEvB,EAAUwB,aAAZ,QAAqBxB,EAAUyB,KAAMC,IAAK,kCAAkC1B,EAAUsB,eAEjH,gBAAKF,UAAU,UAAUG,IAAG,UAAEvB,EAAUwB,aAAZ,QAAqBxB,EAAUyB,KAAMC,IAAKC,OAI9E,gBAAIP,UAAU,kBAAd,WACI,gBAAIA,UAAU,kBAAd,WACI,eAAGA,UAAU,iBAAb,oBAA+BpB,EAAUwB,aAAzC,QAAkDxB,EAAUyB,KAA5D,MAvBJN,EAuBgFnB,EAAU4B,aAtBzF,IAAIC,KAAKV,GACVW,eAqBI,QACA,eAAGV,UAAU,mBAAb,wBAA4CW,KAAKC,MAA6B,GAAvBhC,EAAUiC,cAAmB,WAExF,gBAAIb,UAAU,kBAAd,WACI,cAAGA,UAAU,iBAAb,uBACA,cAAGA,UAAU,2BAAb,SAAyCpB,EAAUkC,eAEvD,gBAAId,UAAU,kBAAd,WACI,cAAGA,UAAU,iBAAb,qBACA,cAAGA,UAAU,oBAAb,SA3CL,WAEX,IAAMe,EAAcnC,EAAUoC,OAC1BzB,EAAS,GACb,GAAGwB,EAAY,CAAC,IAAD,YACSA,GADT,IACX,2BAAiC,CAC7BxB,EAASA,EAAS,IADW,QACDc,IAC7B,CAHQ,+BAId,CACD,OAAOd,CACV,CAiCqDyB,eAI9C,iBAAKhB,UAAU,4BAAf,WACI,cAAGA,UAAU,iBAAb,uCACI,gBAAIA,UAAU,uBAAd,WACI,gBAAIA,UAAU,gBAAd,eAA+B,SAAC,KAAD,CAAMd,MAAO,CAAEC,KAAMH,GAAYgB,UAAU,gBAAgBC,GAAG,OAA9D,qBAA/B,QACA,gBAAID,UAAU,gBAAd,eAA+B,SAAC,KAAD,CAAMd,MAAO,CAAEC,KAAMH,GAAYgB,UAAU,gBAAgBC,GAAG,UAA9D,wBAA/B,cAGZ,0BACI,SAAC,EAAAgB,SAAD,CAAUC,UAAU,cAAGlB,UAAU,iBAAb,qCAApB,UACI,SAAC,KAAD,UAKnB,C","sources":["pages/MoviesDetails.jsx"],"sourcesContent":["import { useParams,Outlet,Link,useLocation, NavLink } from \"react-router-dom\";\nimport { useEffect,useState,Suspense} from \"react\";\nimport './pagesStyled.css'\nimport noImage from '../images/noImage.jpg'\n\nconst MoviesDetails = () =>{\n    const [movieInfo, setMovieInfo] = useState([])\n    const {movieID} = useParams()\n\n    const location = useLocation();\n    const cameBack = location.state?.from ?? '/';\n\n        const MAIN_URL = 'https://api.themoviedb.org';\n        const URL_KEY = 'fb40b3f9c120ec573db898c0235ca89c';\n\n    useEffect(() => {\n            fetch(`${MAIN_URL}/3/movie/${movieID}?api_key=${URL_KEY}&language=en-US`)\n            .then(result => result.json())\n            .then(movie => setMovieInfo(prevState => movie))\n            .catch(error => console.log(error))\n            console.log('moviesDetails')\n    },[movieID])\n\n    const genres = () =>{\n        \n        const arrayGenres = movieInfo.genres\n        let result = ''\n        if(arrayGenres){\n            for (const genre of arrayGenres) {\n                result = result + ' '+genre.name\n              }\n        }\n        return result\n    }\n    const getYear = movieDate => {\n        const date = new Date(movieDate);\n        return date.getFullYear();\n      };\n    \n    \n    return(\n\n        <div className='main_info_movie'>\n            <div className='cameBack_Container'>\n                <NavLink className='cameBack' to={cameBack}>Come Back</NavLink>\n            </div>\n            <div className='movie_info_container'>\n                <div className='poster_container'>\n                    {movieInfo.poster_path ? (\n                        <img className='poster' alt={movieInfo.title ?? movieInfo.name} src={'https://image.tmdb.org/t/p/w500'+movieInfo.poster_path}></img>\n                    ) :(\n                        <img className='noImage' alt={movieInfo.title ?? movieInfo.name} src={noImage}></img>\n                    )}\n                </div>\n\n                <ul className='movie_info_list'>\n                    <li className='movie_info_item'>\n                        <p className='big_info_title'>{movieInfo.title ?? movieInfo.name} ({getYear(movieInfo.release_date)})</p>\n                        <p className='movie_score text'>User Score:{Math.round(movieInfo.vote_average*10) + '%'}</p>\n                    </li>\n                    <li className='movie_info_item'>\n                        <p className='big_info_title'>Overview</p>\n                        <p className='movie_Overview-text text'>{movieInfo.overview}</p>\n                    </li>\n                    <li className='movie_info_item'>\n                        <p className='big_info_title'>Genres</p>\n                        <p className='movie_genres text'>{genres()}</p>\n                    </li>\n                </ul>\n            </div>\n            <div className='additional_info_container'>\n                <p className='big_info_title'>Additional information :</p>\n                    <ul className='additional_info_list'>\n                        <li className='trending_item'> <Link state={{ from: cameBack }} className='trending_link' to=\"cast\"> - Cast</Link> </li>\n                        <li className='trending_item'> <Link state={{ from: cameBack }} className='trending_link' to=\"reviews\"> - Reviews</Link> </li>\n                    </ul>\n            </div>\n            <div>\n                <Suspense fallback={<p className='big_info_title'>Loading... ðŸ•“</p>}>\n                    <Outlet/>\n                </Suspense>\n            </div>\n        </div>\n    )\n}\n\nexport default MoviesDetails"],"names":["useState","movieInfo","setMovieInfo","movieID","useParams","cameBack","useLocation","state","from","useEffect","fetch","then","result","json","movie","prevState","catch","error","console","log","movieDate","className","to","poster_path","alt","title","name","src","noImage","release_date","Date","getFullYear","Math","round","vote_average","overview","arrayGenres","genres","Suspense","fallback"],"sourceRoot":""}