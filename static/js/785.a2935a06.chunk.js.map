{"version":3,"file":"static/js/785.a2935a06.chunk.js","mappings":"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","sources":["components/SearchBox.jsx","components/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import './styles.css'\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchBox = () =>{\n    const [prevValue, setPrevValue] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const searchQuery = searchParams.get('query');\n    const [currentValue, setCurrentValue] = useState(() => searchQuery || '')\n\n    const searchQweryFunc = e =>{\n        e.preventDefault()\n        if(currentValue === ''){\n            return toast.error('Будь ласка введіть назву фільму', {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"dark\",\n                });     \n        }\n\n        if(prevValue === currentValue){\n            return toast.error(`Ви уже зробили пошук ${currentValue}`, {\n                position: \"top-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"dark\",\n                });  \n        }\n        setPrevValue(currentValue)\n        setSearchParams({ query: currentValue });\n    }\n    const changeCurrentValue = e => {\n        setCurrentValue(e.currentTarget.value)\n    }\n    return(\n        <div className='qwery_Container'>\n            <form className='formQwery' onSubmit={searchQweryFunc}>\n            <label>\n                <input \n                    value={currentValue}\n                    className='inputSearch'\n                    type=\"text\"\n                    onChange={changeCurrentValue}\n                >\n                </input>\n            </label>\n            \n                <button className='submitButton' type=\"submit\"> <FaSearch className='button_icon'/> </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBox","import { useSearchParams,useLocation  } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { NavLink } from \"react-router-dom\";\nimport { toast } from 'react-toastify'\nimport './styles.css'\n\nconst MoviesList = () => {\n    const [searchParams] = useSearchParams();\n    const [moviesArray, setMoviesArray] = useState([])\n    const [loader,setLoader] = useState(false);\n    const [prevValue, setPrevValue] = useState('')\n    const location = useLocation();\n\n\n    const queryValue = searchParams.get(\"query\") ?? \"\";\n    \n    useEffect(() => {\n\n        if(prevValue !== queryValue){\n            setMoviesArray(prevState => [])\n        }\n\n        if(!queryValue || prevValue === queryValue){\n            return\n        }\n        const MAIN_URL = 'https://api.themoviedb.org';\n        const URL_KEY = 'fb40b3f9c120ec573db898c0235ca89c';\n\n        setLoader(prevState => true)\n            setTimeout(() =>{\n                fetch(`${MAIN_URL}/3/search/movie?api_key=${URL_KEY}&language=en-US&query=${queryValue}&page=1&include_adult=false`)\n            .then(result => result.json())\n            .then(array => {\n                if(array.results.length === 0){\n                    return toast.error('Нажаль по вашому запиту нічого не знайдено', {\n                        position: \"top-right\",\n                        autoClose: 2500,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"dark\",\n                        });\n            }\n            console.log('movieList')\n            setMoviesArray(prevState => [...prevState,...array.results])\n            setPrevValue(prevState => queryValue)\n        }\n            ).catch(error => console.log(error))\n            .finally(setLoader(prevState => false))\n            },2000)\n            \n    },[queryValue, prevValue])\n\n    if(loader){ \n        return(\n            <div className='query_container'>\n                <p className='reviews_author'>Loading... 🕓</p>\n            </div>\n\n        )\n    }\n\n    if(moviesArray.length > 0){\n        return(\n            <div className='query_container'>\n                <ul className='query_list'>\n                    {moviesArray.map(movie => \n                    <li className='query_item' id={movie.id} key={nanoid()}>\n                        <NavLink\n                         state={{ from: location }} to={`/movies/${movie.id}`} className='query_link'>- {movie.title ?? movie.name}\n                        </NavLink>\n                    </li>)\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default MoviesList","import SearchBox from '../components/SearchBox'\nimport MoviesList from '../components/MoviesList'\nimport'./pagesStyled.css'\n\nconst Movies = () =>{\n     \n\n    return(\n        <main>\n            <SearchBox/>\n              <MoviesList />\n        </main>\n        )\n}\n\n\nexport default Movies"],"names":["useState","prevValue","setPrevValue","useSearchParams","searchParams","setSearchParams","searchQuery","get","currentValue","setCurrentValue","className","onSubmit","e","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","query","value","type","onChange","currentTarget","moviesArray","setMoviesArray","loader","setLoader","location","useLocation","queryValue","useEffect","prevState","setTimeout","fetch","then","result","json","array","results","length","console","log","catch","error","finally","map","movie","id","state","from","to","title","name","nanoid"],"sourceRoot":""}