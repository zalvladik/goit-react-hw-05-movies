{"version":3,"file":"static/js/415.ebc77d1f.chunk.js","mappings":"sMAgCA,UA5Ba,WAEb,OAAsDA,EAAAA,EAAAA,UAAS,IAA/D,eAAOC,EAAP,KAA4BC,EAA5B,KAWI,OATAC,EAAAA,EAAAA,YAAU,WAIFC,MAAM,GAAD,OAHQ,6BAGR,uCAFO,qCAGXC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAX,IACXF,MAAK,SAAAG,GAAK,OAAIN,GAAuB,SAAAO,GAAS,cAAOD,EAAME,QAAb,GAApC,GAClB,GAAC,KAGA,2BACE,gBAAKC,UAAU,qBAAf,UACI,eAAIA,UAAU,gBAAd,SACCV,EAAoBW,KAAI,SAAAC,GAAK,aAC1B,eAAIF,UAAU,gBAA+BG,GAAID,EAAMC,GAAvD,UACI,UAAC,KAAD,CAASC,GAAE,kBAAaF,EAAMC,IAAMH,UAAU,gBAA9C,yBAAiEE,EAAMG,aAAvE,QAAgFH,EAAMI,UADvDC,EAAAA,EAAAA,MADT,SAQvC,C,uDC5BI,IAkBIA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACT,EAAIU,GAWvD,OAREV,IAFFU,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["pages/Home.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\n\nconst Home = () => {\n\nconst [trendingMoviesToday, setTrendingMoviesToday] = useState([]) \n\n    useEffect(() => {\n        const MAIN_URL = 'https://api.themoviedb.org';\n        const URL_KEY = 'fb40b3f9c120ec573db898c0235ca89c';\n\n            fetch(`${MAIN_URL}/3/trending/all/day?api_key=${URL_KEY}`)\n            .then(result => result.json())\n            .then(array => setTrendingMoviesToday(prevState =>[...array.results]))\n    },[])\n    \n    return (\n      <main>\n        <div className='trending_container'>\n            <ul className='trending_list'>\n            {trendingMoviesToday.map(movie =>\n                <li className='trending_item' key={nanoid()} id={movie.id}>\n                    <NavLink to={`/movies/${movie.id}`} className='trending_link'>- {movie.title ?? movie.name}</NavLink>\n                </li>)}\n            </ul>\n        </div>\n      </main>\n    );\n  };\n\n\nexport default Home\n  ","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","trendingMoviesToday","setTrendingMoviesToday","useEffect","fetch","then","result","json","array","prevState","results","className","map","movie","id","to","title","name","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}